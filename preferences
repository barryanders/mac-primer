#!/usr/bin/env bash
# Go further with customizing your preferences | https://macos-defaults.com/
mac=$(test "`uname`" == "Darwin")

if [[ mac ]]; then
# Close System Preferences to prevent it from overriding the changes below
osascript -e 'tell application "System Preferences" to quit'

# Persistant sudo
sudo -v; while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

#==============================================================================#
# System
#==============================================================================#

# Set computer name (as done via System Preferences → Sharing)
COMPUTER_NAME="Holmes"
LOWER_NAME=$(echo "$COMPUTER_NAME" | tr '[:upper:]' '[:lower:]')
sudo scutil --set ComputerName $COMPUTER_NAME
sudo scutil --set HostName "$LOWER_NAME"
sudo scutil --set LocalHostName "$LOWER_NAME"
sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "$LOWER_NAME"

# Require password immediately after sleep or screen saver begins
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0

# Save screenshots to the Downloads folder
defaults write com.apple.screencapture location -string "${HOME}/Downloads"

# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
defaults write com.apple.screencapture type -string "png"

# Disable shadow in screenshots
defaults write com.apple.screencapture disable-shadow -bool true

#==============================================================================#
# Windows
#==============================================================================#

# Always show scrollbars `WhenScrolling`, `Automatic` and `Always`
defaults write NSGlobalDomain AppleShowScrollBars -string "Always"

# Minimize windows into their application's icon?
defaults write com.apple.dock minimize-to-application -bool true

# Expand the following file Info panes
defaults write com.apple.finder FXInfoPanesExpanded -dict \
  General    -bool true \
  MetaData   -bool true \
  OpenWith   -bool true \
  Privileges -bool true

# Expand save panel by default?
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# Expand print panel by default?
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

# Enable the "Are you sure you want to open this application?" dialog?
defaults write com.apple.LaunchServices LSQuarantine -bool false

# Disable the crash reporter
defaults write com.apple.CrashReporter DialogType -string "none"

# Prevent the prompt to use new hard drives as a backup volume?
defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

#==============================================================================#
# Logs
#==============================================================================#

# Logs: Disable download history
ln -sf /dev/null ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2

# Logs: Disable recent places list, the integer is the number of items stored in the list
defaults write -g NSNavRecentPlacesLimit -int 0

#==============================================================================#
# Finder
#==============================================================================#

# Finder: Set Home as the default location for new windows
defaults write com.apple.finder NewWindowTarget -string "PfLo"
defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/Stuff"

# Finder: Show all filename extensions?
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: Show hidden files by default?
defaults write com.apple.finder AppleShowAllFiles -bool false

# Finder: Show recent tags?
defaults write com.apple.finder ShowRecentTags -bool false

# Finder: Show toolbar, sidebar, status bar, and path bar?
defaults write com.apple.finder ShowToolbar -bool true
defaults write com.apple.finder ShowSidebar -bool true
defaults write com.apple.finder ShowStatusBar -bool true
defaults write com.apple.finder ShowPathbar -bool true

# Finder: Show icons for hard drives, servers, and removable media on the desktop?
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false

# Finder: Show the /Volumes folder
sudo chflags nohidden /Volumes

# Finder: Keep folders on top when sorting by name?
defaults write com.apple.finder _FXSortFoldersFirst -bool true

# Finder: When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# Finder: Enable the warning when changing a file extension?
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Finder: Enable the warning before emptying the Trash?
defaults write com.apple.finder WarnOnEmptyTrash -bool true

# Finder: Disable the eject notification?
defaults write /Library/Preferences/SystemConfiguration/com.apple.DiskArbitration.diskarbitrationd.plist DADisableEjectNotification -bool true && sudo pkill diskarbitrationd

# Finder: Avoid creating .DS_Store files on network and USB volumes?
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

# Finder: Automatically open a new window when a volume is mounted?
defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool false
defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool false
defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool false

#==============================================================================#
# Dock, Mission Control, Spaces, & Hot Corners
#==============================================================================#

# Dock: Disable dock icon bouncing?
defaults write com.apple.dock no-bouncing -bool true

# Dock: Automatically hide and show?
defaults write com.apple.dock autohide -bool true

# Dock: Remove the auto-hiding Dock delay
defaults write com.apple.dock autohide-delay -float 0

# Dock: Speed up the animation when hiding/showing the Dock, 0 to disable
defaults write com.apple.dock autohide-time-modifier -float 0.5

# Dock: Make Dock icons of hidden applications translucent?
defaults write com.apple.dock showhidden -bool false

# Hot corners
# Top left screen corner → Disabled
defaults write com.apple.dock wvous-tl-corner -int 0
defaults write com.apple.dock wvous-tl-modifier -int 0
# Top right screen corner → Disabled
defaults write com.apple.dock wvous-tr-corner -int 0
defaults write com.apple.dock wvous-tr-modifier -int 0
# Bottom left screen corner → Disabled
defaults write com.apple.dock wvous-bl-corner -int 0
defaults write com.apple.dock wvous-bl-modifier -int 0
# Bottom right screen corner → Disabled
defaults write com.apple.dock wvous-br-corner -int 0
defaults write com.apple.dock wvous-br-modifier -int 0

#==============================================================================#
# Safari
#==============================================================================#

# Safari: Show the full URL in the address bar?
defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true

# Safari: Set the home page to `about:blank` for faster loading
defaults write com.apple.Safari HomePage -string "about:blank"

# Safari: Automatically open safe files after downloading?
defaults write com.apple.Safari AutoOpenSafeDownloads -bool false

# Safari: Hit the backspace key to go to the previous page in history?
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -bool false

#==============================================================================#
# Terminal
#==============================================================================#

# Terminal: only use UTF-8 in Terminal.app
defaults write com.apple.terminal StringEncodings -array 4

# Customize the theme in Terminal.app
osascript <<EOD
tell application "Terminal"

local allOpenedWindows
local initialOpenedWindows
local windowID
set themeName to "Dracula"

(* Store the IDs of all the open terminal windows. *)
set initialOpenedWindows to id of every window

(* Open the custom theme so that it gets added to the list
   of available terminal themes (note: this will open two
   additional terminal windows). *)
do shell script "open '/resources/" & themeName & ".terminal'"

(* Wait a little bit to ensure that the custom theme is added. *)
delay 1

(* Set the custom theme as the default terminal theme. *)
set default settings to settings set themeName

(* Get the IDs of all the currently opened terminal windows. *)
set allOpenedWindows to id of every window

repeat with windowID in allOpenedWindows

  (* Close the additional windows that were opened in order
     to add the custom theme to the list of terminal themes. *)
  if initialOpenedWindows does not contain windowID then
    close (every window whose id is windowID)

  (* Change the theme for the initial opened terminal windows
     to remove the need to close them in order for the custom
     theme to be applied. *)
  else
    set current settings of tabs of (every window whose id is windowID) to settings set themeName
  end if

end repeat

end tell
EOD

# Terminal: Enable Secure Keyboard Entry?
# See: https://security.stackexchange.com/a/47786/8918
defaults write com.apple.terminal SecureKeyboardEntry -bool true

# Terminal: Enable the annoying line marks?
defaults write com.apple.Terminal ShowLineMarks -int 0

# Terminal: Remove "you have mail"
rm -rf /var/mail/*

#==============================================================================#
# App Store
#==============================================================================#

# App Store: Allow the computer to reboot automatically on macOS updates?
defaults write com.apple.commerce AutoUpdateRestartRequired -bool false

#==============================================================================#
# TextEdit
#==============================================================================#

# TextEdit: Use plain text mode
defaults write com.apple.TextEdit RichText -int 0

# TextEdit: Open and save files as UTF-8
defaults write com.apple.TextEdit PlainTextEncoding -int 4
defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4

#==============================================================================#
# Sublime Text
#==============================================================================#

# Sublime Text: Install Sublime Text settings
cp ~//resources/Package\ Control.sublime-settings ~/Library/Application\ Support/Sublime\ Text*/Packages/User/
cp ~//resources/Preferences.sublime-settings ~/Library/Application\ Support/Sublime\ Text*/Packages/User/

#==============================================================================#
# Hosts
#==============================================================================#

cp ~//hosts /etc/hosts

#==============================================================================#
# Kill affected applications
#==============================================================================#

for app in         \
"cfprefsd"         \
"Dock"             \
"Finder"           \
"Safari"           \
"Sublime Text"     \
"SystemUIServer"   \
"Terminal"
do killall "${app}" &> /dev/null; done

else
echo "Error! Preferences were not applied. You don't appear to be using macOS."
fi
